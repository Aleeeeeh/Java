package entities;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import entities.enums.NivelTrabalhador;

public class Trabalhador {
	private String nome;
	private NivelTrabalhador nivel;
	private Double salario_base;

	// Associação com as outras classes segundo o diagrama (Composição de objetos)
	private departamento Departamento;
	private List<ContratoDeHoras> contrato = new ArrayList<ContratoDeHoras>();

	public Trabalhador() {

	}

	public Trabalhador(String nome, NivelTrabalhador nivel, Double salario_base, departamento departamento) {
		this.nome = nome;
		this.nivel = nivel;
		this.salario_base = salario_base;
		this.Departamento = departamento;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public NivelTrabalhador getNivel() {
		return nivel;
	}

	public void setNivel(NivelTrabalhador nivel) {
		this.nivel = nivel;
	}

	public Double getSalario_base() {
		return salario_base;
	}

	public void setSalario_base(Double salario_base) {
		this.salario_base = salario_base;
	}

	public departamento getDepartamento() {
		return Departamento;
	}

	public void setDepartamento(departamento departamento) {
		Departamento = departamento;
	}

	public List<ContratoDeHoras> getContrato() {
		return contrato;
	}

	// Não tem o setContrato pois isso criaria uma outra lista vazia
	public void adicionarContrato(ContratoDeHoras contratos) {
		contrato.add(contratos);
	}

	public void removerContrato(ContratoDeHoras contratos) {
		contrato.remove(contratos);
	}

	public double renda(int ano, int mes) {
		double sum = salario_base;
		Calendar cal = Calendar.getInstance();
		for (ContratoDeHoras c : contrato) {
			cal.setTime(c.getData()); // Pegar a data da classe contrato_hrs para usar no cálculo
			int c_ano = cal.get(Calendar.YEAR);
			int c_mes = 1 + cal.get(Calendar.MONTH);
			if (ano == c_ano && mes == c_mes) {
				sum += c.valorTotal();
			}

		}
		return sum;
	}

}
